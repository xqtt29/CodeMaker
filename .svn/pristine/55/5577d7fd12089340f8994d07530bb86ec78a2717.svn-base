
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_ADDDETAIL (
v_biid IN VARCHAR2,   --单号
v_rowid IN VARCHAR2)  --需要添加的明细rowid
AS
v_flag VARCHAR2(5);
v_maxrow NUMBER;
v_info VARCHAR2(2000);
CURSOR v_cusor
  IS
  SELECT col FROM TABLE(F_SPLITSTR(v_rowid,','));
BEGIN
  BEGIN
  	SELECT flag INTO v_flag FROM ${table.tableName} WHERE biid=v_biid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
    	RAISE_APPLICATION_ERROR(-20001, '单据'||v_biid||'不存在!');
  END;
  IF v_flag>=11 THEN
    RAISE_APPLICATION_ERROR(-20002, '单据'||v_biid||'为正式单据,无法添加明细!');
  END IF;
  SELECT MAX(roid) INTO v_maxrow FROM ${dtable.tableName} WHERE biid= v_biid;
  OPEN v_cusor;
  LOOP
    FETCH v_cusor INTO v_info;
    EXIT WHEN v_cusor%NOTFOUND;
    v_maxrow:= NVL(v_maxrow,0)+1;
    --INSERT INTO ${dtable.tableName} SELECT v_biid,LPAD(v_maxrow,4,'0'),<#list dtable.columns as c><#if (c.columnName!='soco' && c.columnName!='srid')><#if c_has_next>a.${c.columnName},<#else>a.${c.columnName}</#if></#if></#list> FROM ${xtable.tableName} a WHERE a.rowid=v_info;
  END LOOP;
END P_${ClassNameUpper}_ADDDETAIL;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_ADDHEAD (
v_biid IN VARCHAR2, --单号
v_whid IN VARCHAR2, --库位编码
v_orid IN VARCHAR2, --组织架构编码
v_rema IN VARCHAR2, --备注
v_crus IN VARCHAR2, --创建人id
v_crna IN VARCHAR2) --创建人名称
AS
BEGIN
    --INSERT INTO ${table.tableName}(biid,pcdt,suid,ceve,whid,crus,crna,crdt,flag,orid,rema) VALUES(v_biid,to_date(v_pcdt,'yyyy-MM-dd HH24:mi'),v_suid,v_ceve,v_whid,v_crus,v_crna,getdate(),'01',v_orid,v_rema);
END P_${ClassNameUpper}_ADDHEAD;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_APPROVE (
v_biid IN VARCHAR2, --单号
v_usid IN VARCHAR2, --审核人ID
v_usna IN VARCHAR2,  --审核人名
v_flag IN VARCHAR2  --标志
)
AS
f_flag VARCHAR2(5); --标志
f_count NUMBER;     --明细数量
BEGIN
  BEGIN
  	SELECT flag INTO f_flag FROM ${table.tableName} WHERE biid= v_biid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
      RAISE_APPLICATION_ERROR(-20001, '单据'||v_biid||'不存在!');
  END;
  IF f_flag >= 11 THEN
      RAISE_APPLICATION_ERROR(-20004, '单据'|| v_biid||'为正式单据,无法重复审核!');
  END IF;
  SELECT COUNT(*) INTO f_count FROM ${dtable.tableName} WHERE biid= v_biid;
  IF f_count = 0 THEN
      RAISE_APPLICATION_ERROR(-20002, '单据'|| v_biid||'无明细,无法审核!');
  END IF;
  UPDATE ${table.tableName} SET flag = v_flag,chus = v_usid,chna = v_usna,chdt = getdate() WHERE biid = v_biid;
END P_${ClassNameUpper}_APPROVE;
/
 
 
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_DELDETAIL (
v_rowid IN VARCHAR2) --待删除的rowid
AS
v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count FROM TABLE(F_SPLITSTR(v_rowid,',')) a LEFT JOIN ${table.tableName} b ON a.col = b.rowid WHERE b.flag >=11;
  IF v_count<>0 THEN
  RAISE_APPLICATION_ERROR(-20003, '订单已审核不可删除!');
  END IF;
  DELETE FROM ${dtable.tableName} WHERE rowid in(select col from TABLE(F_SPLITSTR(v_rowid,',')));
END P_${ClassNameUpper}_DELDETAIL;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_DELHEAD (
v_biid IN VARCHAR2) --待删除的单号
AS
v_count NUMBER;
BEGIN
  SELECT COUNT(*) INTO v_count FROM TABLE(F_SPLITSTR(v_biid,',')) a LEFT JOIN ${table.tableName} b ON a.col = b.biid WHERE b.flag >=11;
  IF v_count<>0 THEN
      RAISE_APPLICATION_ERROR(-20003,'订单已审核或已关闭不可删除!');
  END IF;
  --删除主表数据
  DELETE FROM ${table.tableName} WHERE biid in(select col from TABLE(F_SPLITSTR(v_biid,',')));
  --删除明细表数据
  DELETE FROM ${dtable.tableName} WHERE biid in(select col from TABLE(F_SPLITSTR(v_biid,',')));
END P_${ClassNameUpper}_DELHEAD;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_UNAPPROVE (
v_biid IN VARCHAR2, --单号
v_usid IN VARCHAR2, --审核人ID
v_usna IN VARCHAR2, --审核人名
v_flag IN VARCHAR2  --标志
)
AS
f_flag VARCHAR2(5); --标志
BEGIN
  BEGIN
	SELECT flag INTO f_flag FROM ${table.tableName} WHERE biid= v_biid;
    EXCEPTION WHEN NO_DATA_FOUND THEN
	  RAISE_APPLICATION_ERROR(-20001, '单据'||v_biid||'不存在!');
  END;
  IF f_flag <> 11 THEN
      RAISE_APPLICATION_ERROR(-20004, '单据'|| v_biid||'非正式单据,不能反审!');
  END IF;
  UPDATE ${table.tableName} SET flag = v_flag,chus = v_usid,chna = v_usna,chdt = '' WHERE biid = v_biid;
END P_${ClassNameUpper}_UNAPPROVE;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_UPDATEDETAIL (
v_qty IN VARCHAR2,      --采购数量
v_inpa IN VARCHAR2,     --内包装数量
v_rowid IN VARCHAR2)    --修改明细的rowid
AS
t_qty VARCHAR2(20);
t_inpa VARCHAR2(20);
t_rowid VARCHAR2(20);
CURSOR c_qty
  IS
  SELECT col FROM TABLE(F_SPLITSTR(replace(replace(replace(v_qty,'[',''),']',''),'"',''),','));
CURSOR c_inpa
  IS
  SELECT col FROM TABLE(F_SPLITSTR(replace(replace(replace(v_inpa,'[',''),']',''),'"',''),','));
CURSOR c_rowid
  IS
  SELECT col FROM TABLE(F_SPLITSTR(replace(replace(replace(v_rowid,'[',''),']',''),'"',''),','));
BEGIN
  OPEN c_qty;
  OPEN c_inpa;
  OPEN c_rowid;
  LOOP
    FETCH c_qty INTO t_qty;
    FETCH c_inpa INTO t_inpa;
    FETCH c_rowid INTO t_rowid;
    EXIT WHEN c_rowid%NOTFOUND;
    --UPDATE ${dtable.tableName} SET qty= t_qty,inpa=t_inpa where rowid=t_rowid;
  END LOOP;
END P_${ClassNameUpper}_UPDATEDETAIL;
/
 
  CREATE OR REPLACE PROCEDURE P_${ClassNameUpper}_UPDATEHEAD (
v_rowid IN VARCHAR2,  --待修改的rowid
v_whid IN VARCHAR2,   --库位编码
v_rema IN VARCHAR2,   --备注
v_edus IN VARCHAR2,   --修改人ID
v_edna IN VARCHAR2)   --修改人名
AS
f_flag VARCHAR2(5);
BEGIN
  BEGIN
  	SELECT flag INTO f_flag FROM ${table.tableName} WHERE biid=v_biid; 
    EXCEPTION WHEN NO_DATA_FOUND THEN
    	RAISE_APPLICATION_ERROR(-20001, '单据'||v_biid||'不存在!');
  END;
  UPDATE ${table.tableName} a SET whid=v_whid,rema=v_rema,edus=v_edus,edna=v_edna,eddt=getdate() WHERE a.rowid=v_rowid;
END P_${ClassNameUpper}_UPDATEHEAD;
/
 