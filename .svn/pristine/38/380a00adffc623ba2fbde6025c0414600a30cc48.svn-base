package ${path}.${foldName};

import java.sql.PreparedStatement;
import java.util.Vector;
import com.gwall.core.GDatabase;
import com.gwall.pojo.abstracted.BaseBean;

public class ${ClassName}Dao {

    public boolean Delete(String id) {
        boolean flag = false;
        GDatabase db = new GDatabase();
        try {
            PreparedStatement ps = db.getPreparedStatement("delete ${table.tableName} where rowid=?");
            ps.setString(1, id);
            int i = ps.executeUpdate();
            if (i == 1) {
                flag = true;
            } else {
                flag = false;
            }
        } catch (Exception e) {
            flag = false;
            e.printStackTrace();
        } finally {
            db.close();
        }
        return flag;
    }
    public boolean Exists(BaseBean bean) {
        boolean flag = false;
        GDatabase db = new GDatabase();
        try {
            Vector<String> v = new Vector<String>();
            v.add(((${ClassName}Bean) bean).getId());
            flag = db.executeExists("select 1 from ${table.tableName} where biid=?", v);
        } catch (Exception e) {
            flag = false;
            e.printStackTrace();
        } finally {
            db.close();
        }
        return flag;
    }

    public boolean Insert(BaseBean bean) {
        boolean flag = false;
        GDatabase db = new GDatabase();
        try {
            PreparedStatement ps = db.getPreparedStatement("insert into ${table.tableName}(<#list table.columns as c><#if c_has_next>${c.columnName},<#else>${c.columnName}</#if></#list>) values(<#list table.columns as c><#if c_has_next>?,<#else>?</#if></#list>)");
            <#list table.columns as c>
            ps.setString(${c_index+1},((${ClassName}Bean)bean).get${c.columnNameFistUpper}());
            </#list>
            int i = ps.executeUpdate();
            if (i == 1) {
                flag = true;
            }
        } catch (Exception e) {
            e.printStackTrace();
            flag = false;
        } finally {
            db.close();
        }
        return flag;
    }

    public BaseBean Query(String id) {
    	${ClassName}Bean bean = new ${ClassName}Bean();
        Vector<String> v = new Vector<String>();
		v.add(id);
        GDatabase db = new GDatabase();
        try {
			db.Fill(bean,"Select a.rowid as id,<#list table.columns as c><#if c_has_next>a.${c.columnName},<#else>a.${c.columnName}</#if></#list> From ${table.tableName} a Where a.rowid=?", v);
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            db.close();
        }
        return bean;
    }

    public boolean Update(BaseBean bean) {
		boolean flag = false;
		GDatabase db = new GDatabase();
		try {
			PreparedStatement ps = db.getPreparedStatement("update ${table.tableName} set rema=? where rowid=?");
			ps.setString(1, ((${ClassName}Bean) bean).getId());
			int i = ps.executeUpdate();
			if (i == 1) {
				flag = true;
			} else {
				flag = false;
			}
		} catch (Exception e) {
			e.printStackTrace();
			flag = false;
		} finally {
			db.close();
		}
		return flag;
	}
}
